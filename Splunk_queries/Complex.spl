| tstats count as event_count, values(Authentication.dest) as dest_host, values(Network_Traffic.user_agent) as user_agent, sum(Network_Traffic.bytes) as bytes, values(Network_Traffic.dest_ip) as dest_ip from datamodel=Authentication, datamodel=Network_Traffic where Authentication.action="failure" OR Network_Traffic.direction="outbound" by _time, Authentication.src_ip, Network_Traffic.src_ip span=5m | eval src_ip = coalesce(Authentication.src_ip, Network_Traffic.src_ip) | fields - Authentication.src_ip, Network_Traffic.src_ip | eval stage = case(Authentication.action="failure" AND event_count > 5, "lateral", Network_Traffic.direction="outbound", "exfil", true(), "unknown") | eventstats avg(bytes) as avg_bytes by src_ip | eval bytes_deviation = if(bytes > avg_bytes * 3 AND stage="exfil", "high", "normal") | lookup rare_user_agents user_agent OUTPUT is_rare | appendpipe [where stage="exfil" AND isnotnull(is_rare) | eval stage="recon"] | where stage="lateral" OR (stage="exfil" AND bytes_deviation="high") OR stage="recon" | stats dc(stage) as stage_count, values(stage) as stages, values(eval(if(stage="recon", user_agent, null))) as recon_user_agent, values(eval(if(stage="lateral", dest_host, null))) as lateral_hosts, values(eval(if(stage="lateral", event_count, null))) as lateral_attempts, values(eval(if(stage="exfil", dest_ip, null))) as exfil_dest, values(eval(if(stage="exfil", bytes, null))) as exfil_bytes by src_ip | where stage_count >= 2 | lookup threat_intel ip AS src_ip OUTPUT threat_name | eval risk_score = case(stage_count=3, 90, stage_count=2 AND isnotnull(threat_name), 75, stage_count=2, 50, true(), 0) | table src_ip, stages, stage_count, recon_user_agent, lateral_hosts, lateral_attempts, exfil_dest, exfil_bytes, threat_name, risk_score | sort -risk_score
